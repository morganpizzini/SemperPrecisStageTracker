@page "/users/{id}"
@inherits SemperPrecisBaseComponent<UserContract>
@inject NavigationManager UriHelper
<PageTitle>Users</PageTitle>

<h1><Icon class="me-2 pointer" Name="IconName.ArrowLeft" IconSize="IconSize.ExtraSmall" @onclick="GoBackClick" />User detail</h1>

<Card Margin="Margin.Is4.OnY">
    <CardHeader>
        <CardTitle>Personal data</CardTitle>
    </CardHeader>
    <CardBody>
        <Paragraph>
            This is the personal data of the user.
        </Paragraph>
    </CardBody>
    <CardBody>
        <Row>
            <Column>
                <Field>
                    <FieldLabel>First Name</FieldLabel>
                    <TextEdit @bind-Text="@Model.FirstName" Disabled="_disableEdit" />
                </Field>
                <Field>
                    <FieldLabel>Last Name</FieldLabel>
                     <TextEdit @bind-Text="@Model.LastName" Disabled="_disableEdit" />
                </Field>
                 <Field>
                     <FieldLabel>Birth date</FieldLabel>
                    <DatePicker TValue="DateTime" @bind-Date="@Model.BirthDate" Disabled="_disableEdit" />
                 </Field>
                 <Field>
                     <FieldLabel>Birth date</FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="@Model.Gender" Disabled="_disableEdit">
                         @foreach (var gen in Gender.Genders){
                             <SelectItem Value="@gen.Code">@gen.Description</SelectItem>
                         }
                     </Select>
                 </Field>
                <Field>
                    <FieldLabel>Is active</FieldLabel>
                    <Check TValue="bool" Checked="Model.IsActive" Disabled="_disableEdit" />
                </Field>
            </Column>
            <Column>
                 <Field>
                     <FieldLabel>Username</FieldLabel>
                     <TextEdit @bind-Text="@Model.Username" Disabled="_disableEdit" />
                 </Field>
                 <Field>
                     <FieldLabel>Email</FieldLabel>
                     <TextEdit @bind-Text="@Model.Email" Disabled="_disableEdit" />
                 </Field>
                 <Field>
                     <FieldLabel>Full address</FieldLabel>
                     <TextEdit Text="@Model.CompleteAddress" Disabled/>
                 </Field>
                 <CollapseComponent class="ps-3">
                     <ChildContent>
                         <Field>
                             <FieldLabel>Address</FieldLabel>
                             <TextEdit @bind-Text="@Model.Address" Disabled="_disableEdit" />
                         </Field>
                         <Field>
                             <FieldLabel>City</FieldLabel>
                             <TextEdit @bind-Text="@Model.City" Disabled="_disableEdit" />
                         </Field>
                         <Field>
                             <FieldLabel>Province</FieldLabel>
                             <TextEdit @bind-Text="@Model.Province" Disabled="_disableEdit" />
                         </Field>
                         <Field>
                             <FieldLabel>Postal code</FieldLabel>
                             <TextEdit @bind-Text="@Model.PostalCode" Disabled="_disableEdit" />
                         </Field>
                         <Field>
                             <FieldLabel>Country</FieldLabel>
                             <TextEdit @bind-Text="@Model.Country" Disabled="_disableEdit" />
                         </Field>
                     </ChildContent>
                 </CollapseComponent>
                 <Field>
                     <FieldLabel>Phone</FieldLabel>
                     <TextEdit Text="@Model.Phone" Disabled="_disableEdit" />
                 </Field>
                 <Field>
                     <FieldLabel>Fiscal code</FieldLabel>
                     <TextEdit Text="@Model.FiscalCode" Disabled="_disableEdit" />
                 </Field>
                 <Field>
                     <FieldLabel>Firearms Licence</FieldLabel>
                     <TextEdit @bind-Text="@Model.FirearmsLicence" Disabled="_disableEdit" />
                 </Field>
            </Column>
        </Row>
        <Div Class="text-end">
            @if (_disableEdit) {
                <Button Color="Color.Primary" Clicked="()=>{
                        CloneModel = Model.Clone();
                        _disableEdit = !_disableEdit;
                    }">Edit</Button>
            } else {
                if (IsNewElement)
                {
                    <Button Color="Color.Default" Clicked="()=>{
                        Model = CloneModel;
                        _disableEdit = !_disableEdit;
                    }">
                        Abort
                    </Button>
                }
                <Button Color="Color.Success" Clicked="SaveClick">Save</Button>
            }
        </Div>
    </CardBody>
</Card>


@code {


    override protected async Task LoadModel()
    {
        if (IsNewElement)
        {
            Model = new UserContract();
            _disableEdit = false;
            return;
        }
        var response = await Call<UserContract>(RequestType.Get, $"api/Users/{Id}");
        Model = response.Data;
    }

    private void GoBackClick()
    {
        UriHelper.NavigateTo("/users");
    }

    private async Task SaveClick(MouseEventArgs _)
    {
        if (IsNewElement)
        {
            await Call(RequestType.Post, $"api/Users", null, new UserCreateRequest
                {
                    FirstName = Model.FirstName,
                    LastName = Model.LastName,
                    BirthDate = Model.BirthDate,
                    Email = Model.Email,
                    Username = Model.Username,
                    FirearmsLicenceExpireDate = Model.FirearmsLicenceExpireDate,
                    FirearmsLicenceReleaseDate = Model.FirearmsLicenceReleaseDate,
                    FirearmsLicence = Model.FirearmsLicence,
                    MedicalExaminationExpireDate = Model.MedicalExaminationExpireDate,
                    BirthLocation = Model.BirthLocation,
                    Address = Model.Address,
                    City = Model.City,
                    PostalCode = Model.PostalCode,
                    Province = Model.Province,
                    Country = Model.Country,
                    Phone = Model.Phone,
                    FiscalCode = Model.FiscalCode
                }, "User update correctly");
            GoBackClick();
        }
        else
        {
            await Call(RequestType.Put, $"api/Users/{Id}", null, new UserUpdateRequest
                {
                    FirstName = Model.FirstName,
                    LastName = Model.LastName,
                    BirthDate = Model.BirthDate,
                    Email = Model.Email,
                    Username = Model.Username,
                    FirearmsLicenceExpireDate = Model.FirearmsLicenceExpireDate,
                    FirearmsLicenceReleaseDate = Model.FirearmsLicenceReleaseDate,
                    FirearmsLicence = Model.FirearmsLicence,
                    MedicalExaminationExpireDate = Model.MedicalExaminationExpireDate,
                    BirthLocation = Model.BirthLocation,
                    Address = Model.Address,
                    City = Model.City,
                    PostalCode = Model.PostalCode,
                    Province = Model.Province,
                    Country = Model.Country,
                    Phone = Model.Phone,
                    FiscalCode = Model.FiscalCode
                }, "User update correctly");
            CloneModel = new();
            _disableEdit = true;
            await LoadModel();
        }
    }
} 