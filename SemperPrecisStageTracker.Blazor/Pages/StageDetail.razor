@page "/matches/{id}/stages/{stageId}"
@inherits SemperPrecisBaseComponent
@inject IStringLocalizer<StageDetail> L

<Heading Size="HeadingSize.Is1">@L["Detail"]</Heading>
<Button Size="Size.Small" Color="Color.Secondary" Type="ButtonType.Link" To="@(RouteHelper.GetUrl<StageEdit>(new { id = Id, stageId = StageId }))"><Icon Name="IconName.Pen" /> @L["EditStage"]</Button>
<NavLink href="@(RouteHelper.GetUrl<MatchDetail>(new{ id = Id}))">@L["BackToMatch"]</NavLink>
<Divider />
@if (PageLoading)
{
    <p class="text-center">
        <Icon Name="FontAwesomeIcons.AnimationSpinner2x" />
    </p>
}
else
{
    <Row>
        <Column ColumnSize="ColumnSize.Is6">
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <CardTitle>@L["Stage"]</CardTitle>
                    <CardText>@stage.Name</CardText>
                    <CardTitle>@L["Index"]</CardTitle>
                    <CardText>@stage.Index</CardText>
                    <CardTitle>@L["Targets"]</CardTitle>
                    <CardText>@stage.Targets</CardText>
                    <CardTitle>@L["SO"]</CardTitle>
                    <CardText>@stage.SO</CardText>
                </CardBody>
            </Card>
        </Column>
        <Column ColumnSize="ColumnSize.Is6">
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <CardTitle>@L["Match"]</CardTitle>
                    <CardText><NavLink href="@($"matches/{match.MatchId}")">@match.Name</NavLink> - @match.MatchDateTime.ToString("d")</CardText>
                </CardBody>
            </Card>
        </Column>
    </Row>
    <Card Margin="Margin.Is4.OnY">
        <CardBody>
            <Row>
                <Column ColumnSize="ColumnSize.IsFull">
                    <CardTitle>@L["Scenario"]</CardTitle>
                    <CardText>@stage.Scenario</CardText>
                </Column>
                <Column ColumnSize="ColumnSize.IsFull.OnTablet.IsHalf.OnDesktop">
                    <CardTitle>@L["GunReadyCondition"]</CardTitle>
                    <CardText>@stage.GunReadyCondition</CardText>
                    <CardTitle>@L["StageProcedure"]</CardTitle>
                    <CardText>@stage.StageProcedure</CardText>
                    <CardTitle>@L["Notes"]</CardTitle>
                    <CardText>@stage.StageProcedureNotes</CardText>
                </Column>
                <Column ColumnSize="ColumnSize.IsFull.OnTablet.IsHalf.OnDesktop">
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Strings"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.Strings</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Scoring"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.Scoring</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["TargetsDescription"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.TargetsDescription</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["ScoredHits"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.ScoredHits</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["StartStop"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.StartStop</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Rules"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.Rules</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Distance"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@stage.Distance</CardText>
                    </Row>
                    <Row>
                        <CardTitle ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["CoverGarment"]</CardTitle>:&nbsp;
                        <CardText ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">@(stage.CoverGarment ? @L["Yes"] : @L["No"])</CardText>
                    </Row>
                </Column>
            </Row>
        </CardBody>
    </Card>
    <Divider />
    <Row>
        <Column ColumnSize="ColumnSize.IsFull">
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <CardTitle>@L["Groups"]</CardTitle>

                    <Table Striped="true" Hoverable="true">
                        <TableHeader ThemeContrast="ThemeContrast.Dark">
                            <TableRow>
                                <TableHeaderCell>@L["Name"]</TableHeaderCell>
                                <TableHeaderCell></TableHeaderCell>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            @if (match.Groups.Count > 0)
                            {
                                <Virtualize Items="@match.Groups" Context="group">
                                    <TableRow>
                                        <TableRowHeader><NavLink href="@($"matches/{match.MatchId}/stages/{stage.StageId}/group/{group.GroupId}")">@group.Name</NavLink></TableRowHeader>
                                        <TableRowCell>
                                            <Button Size="Size.Small" Color="Color.Primary" Type="ButtonType.Link" To="@($"matches/{match.MatchId}/stages/{stage.StageId}/group/{group.GroupId}")"><Icon Name="IconName.Search" /></Button>
                                        </TableRowCell>
                                    </TableRow>
                                </Virtualize>
                            }
                            else
                            {
                                <TableRow>
                                    <TableRowCell ColumnSpan="2" TextAlignment="TextAlignment.Center">
                                        @L["NoGroups"]
                                    </TableRowCell>
                                </TableRow>
                            }
                        </TableBody>
                    </Table>

                </CardBody>
            </Card>
        </Column>
    </Row>
}

@code {

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string StageId { get; set; }

    StageContract stage = new StageContract();

    MatchContract match = new MatchContract();

    protected override async Task OnInitializedAsync()
    {
        stage = await Post<StageContract>("api/Stage/GetStage", new StageRequest() { StageId = StageId });
        match = await Post<MatchContract>("api/Match/GetMatch", new MatchRequest() { MatchId = Id });
        await base.OnInitializedAsync();
    }

}