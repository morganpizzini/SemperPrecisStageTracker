@page "/shooters/edit/{id}"
@using System.Reflection.Metadata
@inherits SemperPrecisBaseMainComponent
@inject IStringLocalizer<ShooterEdit> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["EditShooter"]</Heading>
<NavLink href="@(RouteHelper.GetUrl<Shooters>())">@L["BackToList"]</NavLink>
<Divider />
<AuthorizeView Roles="@(PermissionCtor.ManageShooters.EditShooter.ToString())" Resource="@Id">
    <Authorizing>
        <h3 class="mt-5">@L["Loading"]</h3>
    </Authorizing>
    <NotAuthorized>
        <h3 class="mt-5">@L["NoAuth"]</h3>
    </NotAuthorized>
    <Authorized>
        @if (ApiLoading)
        {
            <p class="text-center">
                <Icon Name="FontAwesomeIcons.AnimationSpinner2x" />
            </p>
        }
        else
        {
            <ShooterComponent Model="model" SubmitCallback="Submit"></ShooterComponent>

        }
    </Authorized>
</AuthorizeView>
@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;
    UserContract model = new ();
    protected override async Task OnInitializedAsync()
    {
        if (!AuthService.CheckPermissions(PermissionCtor.ManageShooters.EditShooter, Id))
        {
            await base.OnInitializedAsync();
            return;
        }
        model = await Post<UserContract>("api/Shooter/GetShooter", new ShooterRequest { ShooterId = Id });
        
        await base.OnInitializedAsync();
    }
    

    async Task Submit()
    {
    // create request
        var request = new ShooterUpdateRequest()
        {
            ShooterId = model.UserId,
            FirstName = model.FirstName,
            LastName = model.LastName,
            BirthDate = model.BirthDate,
            Username = model.Username,
            Email = model.Email,
            FirearmsLicenceExpireDate = model.FirearmsLicenceExpireDate,
            FirearmsLicence = model.FirearmsLicence,
            MedicalExaminationExpireDate = model.MedicalExaminationExpireDate,
            BirthLocation = model.BirthLocation,
            Address = model.Address,
            City = model.City,
            PostalCode = model.PostalCode,
            Province = model.Province,
            Country = model.Country,
            Phone = model.Phone,
            FiscalCode = model.FiscalCode
        };
        
        var response = await Post<UserContract>("/api/Shooter/UpdateShooter", request);
        if (response != null)
            UriHelper.NavigateTo(RouteHelper.GetUrl<ShooterDetail>(new { id = response.UserId }));
    }
}
