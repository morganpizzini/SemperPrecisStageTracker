@inject IStringLocalizer<BayReservationComponent> L
@using Microsoft.AspNetCore.Components

<Card Margin="Margin.Is4.OnY">
    <CardBody> 
        <Row Class="mb-1">
            <Column ColumnSize="ColumnSize.Is8">
                <CardTitle>
                    @L["Reservations"]
                </CardTitle>
            </Column>
            <Column Class="text-end">
                <Button Size="Size.Small" Color="Color.Primary" Clicked="@bayReservationModals.ShowAddScheduleModal"><Icon Name="IconName.PlusSquare" /> @L["NewReservation"]</Button>
            </Column>
        </Row>
        <Table Striped="true" Hoverable="true">
            <TableHeader ThemeContrast="ThemeContrast.Dark">
                <TableRow>
                    <TableHeaderCell>@L["Name"]</TableHeaderCell>
                    <TableHeaderCell>@L["Day"]</TableHeaderCell>
                    <TableHeaderCell></TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                <Virtualize Items="@BayReservations" Context="entity">
                    <TableRow>
                        <TableRowHeader>@(entity.IsBayBlocked ? $"-- {L["bayBlocked"]} --" : entity.User.CompleteName)</TableRowHeader>
                        <TableRowHeader>@entity.Day.ToString() - @entity.From.ToString("HH:mm") ~ @entity.To.ToString("HH:mm")</TableRowHeader>
                        <TableRowCell>
                            <Button Size="Size.Small" Color="Color.Danger" Clicked="@(() => bayReservationModals.DeleteScheduleEntity(entity))"><Icon Name="IconName.Delete" /></Button>
                        </TableRowCell>
                    </TableRow>
                </Virtualize>
            </TableBody>
        </Table>
    </CardBody>
</Card>
<BayReservationModalsComponent
    @ref="bayReservationModals"
    AddCallback="AddCallback"
    BaySchedules="BaySchedules"
    DeleteCallback="DeleteCallback"
    Users="Users"
    ></BayReservationModalsComponent>
@code{
    private BayReservationModalsComponent bayReservationModals = default!;
    ReservationContract entityReservationToDelete = new();

    ReservationCreateRequest model = new();
    string addScheduleId = string.Empty;

    [Parameter, EditorRequired]
    public IList<ReservationContract> BayReservations { get; set; } = new List<ReservationContract>();
    [Parameter, EditorRequired]
    public IList<ScheduleContract> BaySchedules { get; set; } = new List<ScheduleContract>();
    [Parameter, EditorRequired]
    public IList<UserContract> Users { get; set; } = new List<UserContract>();

    [Parameter, EditorRequired]
    public EventCallback<ReservationCreateRequest> AddCallback { get; set; }
    [Parameter, EditorRequired]
    public EventCallback<string> DeleteCallback { get; set; }

}