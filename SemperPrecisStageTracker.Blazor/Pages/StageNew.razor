@page "/matches/{id}/stages/new"
@inherits SemperPrecisBaseComponent
@inject IStringLocalizer<StageNew> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["NewStage"]</Heading>
<NavLink href="@(RouteHelper.GetUrl<MatchDetail>(new{ id = Id}))">@L["BackToMatch"]</NavLink>
<Divider />
<Validations @ref="validations" Mode="ValidationMode.Manual" Model="@model">
    <Validation Validator="@ValidationRule.IsNotEmpty">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Name"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <TextEdit Placeholder="@L["Name"]" @bind-Text="@model.Name">
                    <Feedback>
                        <ValidationError>@L["WrongName"]</ValidationError>
                    </Feedback>
                </TextEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Index"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <NumericEdit Placeholder="@L["Index"]" TValue="int" @bind-Value="@model.Index">
                    <Feedback>
                        <ValidationError>@L["WrongIndex"]</ValidationError>
                    </Feedback>
                </NumericEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field>
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Scenario"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <MemoEdit Rows="5" Placeholder="@L["Scenario"]" @bind-Text="@model.Scenario">
                    <Feedback>
                        <ValidationError>@L["WrongScenario"]</ValidationError>
                    </Feedback>
                </MemoEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field>
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["GunReadyCondition"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <MemoEdit Rows="3" Placeholder="@L["GunReadyCondition"]" @bind-Text="@model.GunReadyCondition">
                    <Feedback>
                        <ValidationError>@L["WrongGunReadyCondition"]</ValidationError>
                    </Feedback>
                </MemoEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field>
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["StageProcedure"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <MemoEdit Rows="5" Placeholder="@L["StageProcedure"]" @bind-Text="@model.StageProcedure">
                    <Feedback>
                        <ValidationError>@L["WrongStageProcedure"]</ValidationError>
                    </Feedback>
                </MemoEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field>
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Notes"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <MemoEdit Rows="2" Placeholder="@L["Notes"]" @bind-Text="@model.StageProcedureNotes">
                    <Feedback>
                        <ValidationError>@L["WrongNotes"]</ValidationError>
                    </Feedback>
                </MemoEdit>
            </FieldBody>
        </Field>
    </Validation>

    <Validation Validator="@ValidationRule.None">
        <Field>
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Rules"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <TextEdit Placeholder="@L["Rules"]" @bind-Text="@model.Rules">
                    <Feedback>
                        <ValidationError>@L["WrongRules"]</ValidationError>
                    </Feedback>
                </TextEdit>
            </FieldBody>
        </Field>
    </Validation>
    
    <Button Size="Size.Small" Color="Color.Primary" Clicked="@AddString">@L["AddString"]</Button>
    <Tabs RenderMode="TabsRenderMode.LazyLoad" SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
        <Items>
            @foreach (var stageString in model.Strings)
            {
                <Tab Name="@stageString.Name">@stageString.Name</Tab>
            }
        </Items>
        <Content>
            <Virtualize Items="@model.Strings" Context="stageString">
                <TabPanel Name="@stageString.Name">
                    <Validation Validator="@ValidationRule.None">
                        <Field Horizontal="true">
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Targets"]</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <NumericEdit Placeholder="@L["Targets"]" TValue="int" @bind-Value="@stageString.Targets">
                                    <Feedback>
                                        <ValidationError>@L["WrongTargets"]</ValidationError>
                                    </Feedback>
                                </NumericEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None">
                        <Field>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Scoring"]</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Placeholder="@L["Scoring"]" @bind-Text="@stageString.Scoring">
                                    <Feedback>
                                        <ValidationError>@L["WrongScoring"]</ValidationError>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None">
                        <Field>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["TargetsDescription"]</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Placeholder="@L["TargetsDescription"]" @bind-Text="@stageString.TargetsDescription">
                                    <Feedback>
                                        <ValidationError>@L["WrongTargetsDescription"]</ValidationError>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None">
                        <Field>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["ScoredHits"]</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Placeholder="@L["ScoredHits"]" @bind-Text="@stageString.ScoredHits">
                                    <Feedback>
                                        <ValidationError>@L["WrongScoredHits"]</ValidationError>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None">
                        <Field>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["StartStop"]</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Placeholder="@L["StartStop"]" @bind-Text="@stageString.StartStop">
                                    <Feedback>
                                        <ValidationError>@L["WrongStartStop"]</ValidationError>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None">
                        <Field>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Distance"]</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Placeholder="@L["Distance"]" @bind-Text="@stageString.Distance">
                                    <Feedback>
                                        <ValidationError>@L["WrongDistance"]</ValidationError>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None">
                        <Field>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">&nbsp;</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <Check TValue="bool" @bind-Checked="@stageString.CoverGarment">@L["CoverGarment"]</Check>
                            </FieldBody>
                        </Field>
                    </Validation>
                </TabPanel>
            </Virtualize>
        </Content>
    </Tabs>

    <Field Horizontal="true" JustifyContent="JustifyContent.End">
        <FieldBody ColumnSize="ColumnSize.Is10.Is2.WithOffset">
            <Button Size="Size.Small" Color="Color.Primary" Clicked="@Submit" Loading="ApiLoading" Disabled="ApiLoading">
                <LoadingTemplate><Icon Name="FontAwesomeIcons.AnimationSpinner" />&nbsp;@L["Submit"]</LoadingTemplate>
                <ChildContent>@L["Submit"]</ChildContent>
            </Button>
        </FieldBody>
    </Field>
</Validations>

@code {

    [Parameter]
    public string Id { get; set; }

    Validations validations;
    StageCreateRequest model = new();
    string selectedTab = "String 1";

    protected override async Task OnInitializedAsync()
    {
        model.MatchId = Id;
        model.Strings.Add(new StringCreateRequest()
        {
            Name = "String 1"
        });
        await base.OnInitializedAsync();
    }

    private Task OnSelectedTabChanged( string name )
    {
        selectedTab = name;

        return Task.CompletedTask;
    }

    void AddString()
    {
        model.Strings.Add(new StringCreateRequest()
        {
            Name= $"String {model.Strings.Count + 1}"
        });
    }

    async Task Submit()
    {
        if (!(await validations.ValidateAll()))
            return;
        await validations.ClearAll();
        var response = await Post<GroupContract>("/api/Stage/CreateStage", model);
        if (response != null)
            UriHelper.NavigateTo(RouteHelper.GetUrl<MatchDetail>(new { id = Id }));
    }
}
