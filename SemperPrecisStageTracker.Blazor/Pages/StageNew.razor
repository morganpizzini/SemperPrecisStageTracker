@page "/matches/{id}/stages/new"
@inject HttpClientService Client
@inject IStringLocalizer<StageNew> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["NewStage"]</Heading>
<Divider />
<Validations @ref="validations" Mode="ValidationMode.Manual" Model="@model">
    <Validation Validator="@ValidationRule.IsNotEmpty">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Name"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <TextEdit Placeholder="@L["Name"]" @bind-Text="@model.Name">
                    <Feedback>
                        <ValidationError>@L["WrongName"]</ValidationError>
                    </Feedback>
                </TextEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Targets"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <NumericEdit Placeholder="@L["Targets"]" TValue="int" @bind-Value="@model.Targets">
                    <Feedback>
                        <ValidationError>@L["WrongTargets"]</ValidationError>
                    </Feedback>
                </NumericEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidationRule.None">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Index"]</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                <NumericEdit Placeholder="@L["Index"]" TValue="int" @bind-Value="@model.Index">
                    <Feedback>
                        <ValidationError>@L["WrongIndex"]</ValidationError>
                    </Feedback>
                </NumericEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Row>
        <Column ColumnSize="ColumnSize.IsFull.OnTablet.IsHalf.OnDesktop">
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["SO"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["SO"]" @bind-Text="@model.SO">
                            <Feedback>
                                <ValidationError>@L["WrongSO"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Scenario"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <MemoEdit Rows="5" Placeholder="@L["Scenario"]" @bind-Text="@model.Scenario">
                            <Feedback>
                                <ValidationError>@L["WrongScenario"]</ValidationError>
                            </Feedback>
                        </MemoEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["GunReadyCondition"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <MemoEdit Rows="3" Placeholder="@L["GunReadyCondition"]" @bind-Text="@model.GunReadyCondition">
                            <Feedback>
                                <ValidationError>@L["WrongGunReadyCondition"]</ValidationError>
                            </Feedback>
                        </MemoEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["StageProcedure"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <MemoEdit Rows="5" Placeholder="@L["StageProcedure"]" @bind-Text="@model.StageProcedure">
                            <Feedback>
                                <ValidationError>@L["WrongStageProcedure"]</ValidationError>
                            </Feedback>
                        </MemoEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Notes"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <MemoEdit Rows="2" Placeholder="@L["Notes"]" @bind-Text="@model.StageProcedureNotes">
                            <Feedback>
                                <ValidationError>@L["WrongNotes"]</ValidationError>
                            </Feedback>
                        </MemoEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Column>
        <Column ColumnSize="ColumnSize.IsFull.OnTablet.IsHalf.OnDesktop">
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Strings"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                         <NumericEdit Placeholder="@L["Strings"]" TValue="int" @bind-Value="@model.Strings">
                            <Feedback>
                                <ValidationError>@L["WrongStrings"]</ValidationError>
                            </Feedback>
                        </NumericEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Scoring"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["Scoring"]" @bind-Text="@model.Scoring">
                            <Feedback>
                                <ValidationError>@L["WrongScoring"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["TargetsDescription"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["TargetsDescription"]" @bind-Text="@model.TargetsDescription">
                            <Feedback>
                                <ValidationError>@L["WrongTargetsDescription"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["ScoredHits"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["ScoredHits"]" @bind-Text="@model.ScoredHits">
                            <Feedback>
                                <ValidationError>@L["WrongScoredHits"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["StartStop"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["StartStop"]" @bind-Text="@model.StartStop">
                            <Feedback>
                                <ValidationError>@L["WrongStartStop"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Rules"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["Rules"]" @bind-Text="@model.Rules">
                            <Feedback>
                                <ValidationError>@L["WrongRules"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">@L["Distance"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <TextEdit Placeholder="@L["Distance"]" @bind-Text="@model.Distance">
                            <Feedback>
                                <ValidationError>@L["WrongDistance"]</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
            <Validation Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">&nbsp;</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                        <Check TValue="bool" @bind-Checked="@model.CoverGarment">@L["CoverGarment"]</Check>
                    </FieldBody>
                </Field>
            </Validation>
        </Column>
    </Row>
    <Field Horizontal="true" JustifyContent="JustifyContent.End">
        <FieldBody ColumnSize="ColumnSize.Is10.Is2.WithOffset">
            <Button Size="Size.Small" Color="Color.Primary" Clicked="@Submit">@L["Submit"]</Button>
        </FieldBody>
    </Field>
</Validations>

@code {

    [Parameter]
    public string Id { get; set; }

    Validations validations;
    //IList<MatchContract> matches = new List<MatchContract>();
    StageCreateRequest model = new StageCreateRequest();

    protected override async Task OnInitializedAsync()
    {
        //matches = await Client.PostAsync<IList<MatchContract>>("api/Match/FetchAllMatches", null);
        model.MatchId = Id;
        await base.OnInitializedAsync();
    }

    async Task Submit()
    {
        if (!validations.ValidateAll())
            return;
        validations.ClearAll();
        var response = await Client.PostAsync<GroupContract>("/api/Stage/CreateStage", model);
        UriHelper.NavigateTo($"/matches/{Id}");
    }
}
