@page "/associations/new"
@inherits SemperPrecisBaseMainComponent
@inject IStringLocalizer<AssociationNew> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["NewAssociation"]</Heading>
<NavLink href="@(RouteHelper.GetUrl<Associations>())">@L["BackToList"]</NavLink>
<Divider />
<AuthorizeView Roles="@(PermissionCtor.ManageAssociations.CreateUser.ToString())">
    <Authorizing>
        <h3 class="mt-5">@L["Loading"]</h3>
    </Authorizing>
    <NotAuthorized>
        <h3 class="mt-5">@L["NoAuth"]</h3>
    </NotAuthorized>
    <Authorized>
        <AssociationComponent Model="model" SubmitCallback="Submit"></AssociationComponent>
    </Authorized>
</AuthorizeView>

@code {
    AssociationContract model = new();

    async Task Submit()
    {
        // create request
        var request = new AssociationCreateRequest()
        {
            Name = model.Name,
            Divisions = model.Divisions.OrderBy(x => x).ToList(),
            Classifications = model.Classifications,
            Categories = model.Categories,
            FirstPenaltyLabel = model.FirstPenaltyLabel,
            HitOnNonThreatPointDown = model.HitOnNonThreatPointDown,
            FirstProceduralPointDown = model.FirstProceduralPointDown,
            SecondPenaltyLabel = model.SecondPenaltyLabel,
            SecondProceduralPointDown = model.SecondProceduralPointDown,
            ThirdPenaltyLabel = model.ThirdPenaltyLabel,
            ThirdProceduralPointDown = model.ThirdProceduralPointDown,
            SoRoles = model.SoRoles,
            MatchKinds = model.MatchKinds
        };

        var response = await Post<AssociationContract>("/api/Association/CreateAssociation", request);
        if (response != null)
            UriHelper.NavigateTo(RouteHelper.GetUrl<AssociationDetail>(new { id = response.AssociationId }));
    }
}
