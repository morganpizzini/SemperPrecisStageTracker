@page "/app/matches"
@inherits SemperPrecisBaseComponent
@inject IStringLocalizer<Matches> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["Matches"]</Heading>
<Button Size="Size.Small" Color="Color.Primary" Type="ButtonType.Link" to="@(RouteHelper.GetUrl<MatchNew>())"><Icon Name="IconName.PlusSquare" /> @L["NewMatch"]</Button>
<Divider />
<Table Striped="true" Hoverable="true">
    <TableHeader ThemeContrast="ThemeContrast.Dark">
        <TableRow>
            <TableHeaderCell>@L["Name"]</TableHeaderCell>
            <TableHeaderCell>@L["Association"]</TableHeaderCell>
            <TableHeaderCell>@L["Date"] / @L["Location"]</TableHeaderCell>
            <TableHeaderCell></TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @if (PageLoading)
        {
            <TableRow>
                <TableRowCell ColumnSpan="4" TextAlignment="@TextAlignment.Center"><Icon Name="FontAwesomeIcons.AnimationSpinner2x" /></TableRowCell>
            </TableRow>
        }
        else
        {
            @if (matches.Count == 0)
            {
                <TableRow>
                    <TableRowCell ColumnSpan="4" TextAlignment="@TextAlignment.Center">@L["NoData"]</TableRowCell>
                </TableRow>
            }
            else
            {
                <Virtualize Items="@matches" Context="match">
                    <TableRow>
                        <TableRowHeader><NavLink href="@(RouteHelper.GetUrl<MatchDetail>(new {id = match.MatchId}))">@match.Name</NavLink></TableRowHeader>
                        <TableRowCell>@match.Association.Name</TableRowCell>
                        <TableRowCell>@match.MatchDateTime.ToString("d")<br />@match.Place.Name</TableRowCell>
                        <TableRowCell>
                            <Button Size="Size.Small" Color="Color.Secondary" Type="ButtonType.Link" To="@(RouteHelper.GetUrl<MatchEdit>(new {id = match.MatchId}))"><Icon Name="IconName.Pen" /></Button>
                            <Button Size="Size.Small" Color="Color.Primary" Type="ButtonType.Link" To="@(RouteHelper.GetUrl<MatchDetail>(new {id = match.MatchId}))"><Icon Name="IconName.Search" /></Button>
                            <Button Size="Size.Small" Color="Color.Primary" Type="ButtonType.Link" to="@($"app/stats/{match.ShortLink}")"><Icon Name="FontAwesomeIcons.ChartBar" /></Button>
                        </TableRowCell>
                    </TableRow>
                </Virtualize>
            }
        }
    </TableBody>
</Table>

@code {
    IList<MatchContract> matches = new List<MatchContract>();

    protected override async Task OnInitializedAsync()
    {
        matches = await Post<IList<MatchContract>>("api/Match/FetchAllMatches", null);
        await base.OnInitializedAsync();
    }

}