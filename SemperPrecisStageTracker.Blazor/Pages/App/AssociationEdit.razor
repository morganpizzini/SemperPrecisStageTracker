@page "/app/associations/edit/{id}"
@inherits SemperPrecisBaseComponent
@inject IStringLocalizer<AssociationEdit> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["EditAssociation"]</Heading>
<NavLink href="@(RouteHelper.GetUrl<Associations>())">@L["BackToList"]</NavLink>
<Divider />
<AssociationComponent Model="model" SubmitCallback="Submit"></AssociationComponent>

@code {
    [Parameter]
    public string Id { get; set; }
    AssociationContract model = new();

    protected override async Task OnInitializedAsync()
    {
        if (!AuthService.CheckPermissions(Permissions.ManageAssociations.AndList(Permissions.EditAssociation), Id))
        {
            await base.OnInitializedAsync();
            return;
        }
        model = await Post<AssociationContract>("api/Association/GetAssociation", new AssociationRequest { AssociationId = Id });
        
        await base.OnInitializedAsync();
    }

    async Task Submit()
    {
    // create request
        var request = new AssociationUpdateRequest()
        {
            AssociationId = model.AssociationId,
            Name = model.Name,
            Divisions = model.Divisions.OrderBy(x => x).ToList(),
            Classifications = model.Classifications,
            Categories = model.Categories,
            FirstPenaltyLabel = model.FirstPenaltyLabel,
            HitOnNonThreatDownPoints = model.HitOnNonThreatDownPoints,
            FirstProceduralPointDown = model.FirstProceduralPointDown,
            SecondPenaltyLabel = model.SecondPenaltyLabel,
            SecondProceduralPointDown = model.SecondProceduralPointDown,
            ThirdPenaltyLabel = model.ThirdPenaltyLabel,
            ThirdProceduralPointDown = model.ThirdProceduralPointDown,
            SoRoles = model.SoRoles
        };
        var response = await Post<AssociationContract>("/api/Association/UpdateAssociation", request);
        if (response != null)
            UriHelper.NavigateTo(RouteHelper.GetUrl<AssociationDetail>(new { id = response.AssociationId }));
    }
}
