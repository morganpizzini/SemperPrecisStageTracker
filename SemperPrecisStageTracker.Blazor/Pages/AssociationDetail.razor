@page "/associations/{id}"
@inherits SemperPrecisBaseComponent
@inject IStringLocalizer<AssociationDetail> L

<Heading Size="HeadingSize.Is1">@L["Detail"]</Heading>
<NavLink href="@(RouteHelper.GetUrl<Associations>())">@L["BackToList"]</NavLink>
<Button Size="Size.Small" Color="Color.Secondary" Type="ButtonType.Link" To="@($"associations/edit/{Id}")"><Icon Name="IconName.Pen" /> @L["EditAssociation"]</Button>
@if (PageLoading)
{
    <p class="text-center">
        <Icon Name="FontAwesomeIcons.AnimationSpinner2x" />
    </p>
}
else
{
    <Row>
        <Column ColumnSize="ColumnSize.IsFull">
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <CardTitle>@L["Association"]</CardTitle>
                    <CardText>@association.Name</CardText>
                </CardBody>
            </Card>
        </Column>
    </Row>
    <Row>
        <Column ColumnSize="ColumnSize.IsHalf">
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <CardTitle>@L["Divisions"]</CardTitle>
                    <CardText>
                        @if (association.Classifications.Count == 0)
                        {
                            @L["NoDivisions"]
                        }
                        else
                        {
                            <ul>
                                <Virtualize Items="@association.Divisions" Context="s">
                                    <li>@s</li>
                                </Virtualize>
                            </ul>
                        }

                    </CardText>
                </CardBody>
            </Card>
        </Column>
        <Column ColumnSize="ColumnSize.IsHalf">
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <CardTitle>@L["Classifications"]</CardTitle>
                    <CardText>
                        @if (association.Classifications.Count == 0)
                        {
                            @L["NoClassifications"]
                        }
                        else
                        {
                        <ul>
                            <Virtualize Items="@association.Classifications" Context="s">
                                <li>@s</li>
                            </Virtualize>
                        </ul>
                        }

                    </CardText>
                </CardBody>
            </Card>
        </Column>
    </Row>
}

@code {

    [Parameter]
    public string Id { get; set; }


    AssociationContract association = new AssociationContract();

    protected override async Task OnInitializedAsync()
    {
        association = await Post<AssociationContract>("api/Association/GetAssociation", new AssociationRequest() { AssociationId = Id });

        await base.OnInitializedAsync();
    }

}