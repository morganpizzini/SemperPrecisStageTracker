@page "/matches"
@inject HttpClientService Client
@inject IStringLocalizer<Matches> L
@inject NavigationManager UriHelper

<Heading Size="HeadingSize.Is1">@L["Matches"]</Heading>
<Button Color="Color.Primary" Type="ButtonType.Link" To="@($"matches/new")"><Icon Name="IconName.PlusSquare" /> @L["NewMatch"]</Button>
<Divider />
<Table Striped="true" Hoverable="true">
    <TableHeader ThemeContrast="ThemeContrast.Dark">
        <TableRow>
            <TableHeaderCell>@L["Name"]</TableHeaderCell>
            <TableHeaderCell>@L["Date"]</TableHeaderCell>
            <TableHeaderCell>@L["Location"]</TableHeaderCell>
            <TableHeaderCell>@L["Associations"]</TableHeaderCell>
            <TableHeaderCell></TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (var match in matches)
        {
            <TableRow>
                <TableRowHeader>@match.Name</TableRowHeader>
                <TableRowCell>@match.MatchDateTime.ToString("d")</TableRowCell>
                <TableRowCell>@match.Location</TableRowCell>
                <TableRowCell>@match.Association.Name</TableRowCell>
                <TableRowCell>
                    <Button Color="Color.Secondary" Type="ButtonType.Link" To="@($"matches/edit/{match.MatchId}")"><Icon Name="IconName.Pen" /></Button>
                    <Button Color="Color.Primary" Type="ButtonType.Link" To="@($"matches/{match.MatchId}")"><Icon Name="IconName.Search" /></Button>
                </TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>

@code {
    IList<MatchContract> matches = new List<MatchContract>();

    protected override async Task OnInitializedAsync()
    {
        matches = await Client.PostAsync<IList<MatchContract>>("api/Match/FetchAllMatches", null);

        await base.OnInitializedAsync();
    }

}